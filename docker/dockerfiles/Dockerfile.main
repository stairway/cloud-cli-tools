# syntax=docker/dockerfile:1
ARG VERSION=base-latest \
    IMAGE_BASE_NAME="stairwaytowonderland/cloud-cli-tools"
FROM ${IMAGE_BASE_NAME}:${VERSION}
LABEL org.opencontainers.image.authors="Andrew Haller <andrew.haller@liatrio.com>"

ARG UNAME=root \
    HOMEDIR=/root \
    PATH="$PATH:/usr/games:/usr/local/games:/snap/bin" \
    GH_CLIENT_TOKEN=

ARG HOMELOCAL=$HOMEDIR/.local

ARG ENVFILE=$HOMELOCAL/.env \
    KUBE_VERSION=latest \
    ISTIO_VERSION=latest \
    TERRAFORM_VERSION=latest \
    TERRAGRUNT_VERSION=latest \
    HELM_VERSION=latest \
    KUBE_PS1_VERSION=v0.8.0

# https://yaml.org/type/bool.html
ENV TRUE='y|Y|yes|Yes|YES|true|True|TRUE|on|On|ON|1' \
    FALSE='n|N|no|No|NO|false|False|FALSE|off|Off|OFF|0'

ENV BOOL="${TRUE}|${FALSE}" \
    KEEP_ALIVE=false \
    SHARED="${SHARED:-${HOMEDIR}/.local/share}" \
    PLUGINS="${PLUGINS:-${DOTLOCAL}/plugins.d}" \
    DOWNLOADS="${DOWNLOADS:-${DOTLOCAL}/downloads}" \
    SCRIPTS="${SCRIPTS:-${DOTLOCAL}/scripts}" \
    DOCS="${DOCS:-${DOTLOCAL}/docs}" \
    BASHRC_EXTRA="${BASHRC_EXTRA:-${DOTLOCAL}/bashrc.extra}" \
    DESCRIBE="${DESCRIBE:-${DOTLOCAL}/bin/describe}" \
    DOTLOCAL="${DOTLOCAL:-/opt/local}" \
    _PATH="${PATH}" \
    PATH="${PATH}"

# We want a "standard Ubuntu"
# (ie: not one that has been minimized
# by removing packages and content
# not required in a production system)
RUN yes | unminimize

RUN useradd -m -s /bin/bash linuxbrew \
	&& echo 'linuxbrew ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers
USER linuxbrew
RUN NONINTERACTIVE=1 bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
USER root

WORKDIR $DOWNLOADS

### Copied using ONBUILD from parent image
# COPY bin/* $DOTLOCAL/bin/
# COPY profile/* $DOTLOCAL/profile.d/
# COPY conf $DOTLOCAL/conf
COPY docs $DOCS

ADD addons/**/*.tgz /tmp/addons/

RUN HOME=$HOMEDIR \
    USER=$UNAME \
    HOMELOCAL=$HOMELOCAL \
    ENVFILE='${HOME}/.local/.env' \
    PATH=$PATH \
    $DOTLOCAL/bin/install.sh && \
    echo "root:root" | chpasswd && \
    [ -f /etc/profile.d/98-docker.sh ] || cat > /etc/profile.d/98-docker-vars.sh <<EOF
TRUE='${TRUE}'
FALSE='${FALSE}'
BOOL='${BOOL}'
SHARED='${SHARED}'
PLUGINS='${PLUGINS}'
DOWNLOADS='${DOWNLOADS}'
SCRIPTS='${SCRIPTS}'
DOCS='${DOCS}'
BASHRC_EXTRA='${BASHRC_EXTRA}'
DESCRIBE='${DESCRIBE}'
DOTLOCAL='${DOTLOCAL}'
AWS_VAULT_BACKEND='${AWS_VAULT_BACKEND}'
_PATH='${_PATH}'
EOF

# (alternative to `--groups sudo` is `echo "$UNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers`)
# (to add password, use `-p "$(openssl passwd -1 <password>)"`)
RUN [ "$UNAME" = "root" ] && NEWU=ubuntu || NEWU="$UNAME" && \
        useradd \
            --shell /bin/bash \
            --create-home \
            --user-group \
            --comment "Default User" \
            --groups sudo,root \
            --no-log-init \
            $NEWU && \
        passwd -d $NEWU && \
        echo "${NEWU}:${NEWU}" | chpasswd && \
        UNAME="$UNAME" \
        USER="$NEWU" \
        HOME="/home/$NEWU" \
        HOMELOCAL="/home/$NEWU/.local" \
        $DOTLOCAL/bin/install-user.sh

USER $UNAME
WORKDIR $HOMEDIR

VOLUME [ "/data", "$HOMEDIR/.ssh", "$HOMEDIR/.gnupg", "$HOMEDIR/.password-store", "$HOMEDIR/.awsvault" ]

SHELL [ "/bin/bash", "-o", "pipefail", "-c" ]
ENTRYPOINT ["/opt/local/bin/docker-entrypoint.sh"]
# The following does not run the appending arguments to entrypoint
# ENTRYPOINT /bin/bash -c "PATH=$_PATH /opt/local/bin/docker-entrypoint.sh"

# Additional Metadata
ARG VERSION=base-latest \
    IMAGE_BASE_NAME="stairwaytowonderland/cloud-cli-tools"

LABEL org.opencontainers.image.base.name="${IMAGE_BASE_NAME}:${VERSION}" \
      org.opencontainers.image.description="docker run <image>:<tag> describe" \
      org.opencontainers.image.title="Cloud CLI Tools" \
      org.opencontainers.image.documentation="https://github.com/${GITHUB_REPO}/tree/main/docker#readme" \
      org.opencontainers.image.url="https://github.com/${GITHUB_REPO}" \
      org.opencontainers.image.source="https://github.com/${GITHUB_REPO}/blob/main/docker/dockerfiles/Dockerfile.main"
