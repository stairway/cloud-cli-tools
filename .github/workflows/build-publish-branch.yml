name: Build and Publish - Branch

on:
  workflow_run:
    workflows: [Build and Publish Base - Branch]
    types: [completed]

  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'conf/**'
  #     - 'docker/**'
  #     - '!conf/base/*'
  #     - '!docker/dockerfiles/*.base'

  push:
    branches:
      - main
      - develop
    paths:
      - 'conf/**'
      - 'docker/**'
      - '!conf/base/*'
      - '!docker/dockerfiles/*.base'

concurrency: ${{ github.event.workflow_run.head_branch || github.ref_name || github.head_ref || github.ref }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_base: ${{ steps.changed-files.outputs.any_changed }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      branch_name: ${{ steps.get-branch-name.outputs.branch-name }}
      build_latest: ${{ steps.get-build-opts.outputs.build-latest }}
      build_dev: ${{ steps.get-build-opts.outputs.build-dev }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files matching filter
        id: changed-files
        uses: ./.github/actions/changed-files-action
        with:
          files: |
            conf/base/*.env
            docker/dockerfiles/*.base

      - name: Get Branch Name
        id: get-branch-name
        uses: ./.github/actions/get-branch-name-action

      - name: Get Build Options
        id: get-build-opts
        run: |
          if [ "${{ steps.get-branch-name.outputs.branch-name }}" = "main" ]; then
            echo "build-latest=true" >> $GITHUB_OUTPUT
          fi
          if [ "${{ steps.get-branch-name.outputs.branch-name }}" = "develop" ]; then
            echo "build-dev=true" >> $GITHUB_OUTPUT
          fi

  check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Github Event
        run: echo '${{ toJson(github.event) }}'
      - name: Workflow Run
        run: echo '${{ tojson(github.event.workflow_run) }}'
      - name: Show Changed Matches
        run: echo '${{ needs.setup.outputs.all_changed_files }}'
      - name: Show Outputs
        run: echo '${{ toJson(needs.setup.outputs) }}'
      - name: Concurrency Group
        run: echo '${{ github.event.workflow_run.head_branch || github.ref_name || github.head_ref || github.ref }}'

  docker:
    runs-on: ubuntu-latest
    needs: [setup, check]
    if: github.event.workflow_run.conclusion == 'success' || !needs.setup.outputs.build_base || needs.setup.outputs.build_base == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU, Docker Buildx, and Login
        uses: ./.github/actions/setup-docker-buildx-action
        with:
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: ./.github/actions/build-script-action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          build-latest: ${{ needs.setup.outputs.build_latest }}
          debug: ${{ needs.setup.outputs.build_dev }}
