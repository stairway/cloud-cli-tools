name: Build and Publish Base - Branch

on:

  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'conf/base/*.env'
  #     - 'docker/dockerfiles/Dockerfile.base'

  push:
    branches:
      - main
      - develop
    paths:
      - 'conf/base/*.env'
      - 'docker/dockerfiles/Dockerfile.base'

concurrency: ${{ github.event.workflow_run.head_branch || github.ref_name || github.head_ref || github.ref }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.get-branch-name.outputs.branch-name }}
      build_latest: ${{ steps.get-build-opts.outputs.build-latest }}
      build_dev: ${{ steps.get-build-opts.outputs.build-dev }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: get-branch-name
        uses: ./.github/actions/get-branch-name-action

      - id: get-build-opts
        run: |
          if [ "${{ steps.get-branch-name.outputs.branch-name }}" = "main" ]; then
            echo "build-latest=true" >> $GITHUB_OUTPUT
          fi
          if [ "${{ steps.get-branch-name.outputs.branch-name }}" = "develop" ]; then
            echo "build-dev=true" >> $GITHUB_OUTPUT
          fi

  check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Show Outputs
        run: echo '${{ toJson(needs.setup.outputs) }}'

  docker:
    runs-on: ubuntu-latest
    needs: [setup, check]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU, Docker Buildx, and Login
        uses: ./.github/actions/setup-docker-buildx-action
        with:
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Base
        uses: ./.github/actions/build-script-action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          build-parent: true
          build-latest: ${{ needs.setup.outputs.build_latest }}
          debug: ${{ needs.setup.outputs.build_dev }}
